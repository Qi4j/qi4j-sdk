
NOT IMPLEMENTED

As reference, here is an excerpt from the official documentation:

Hazelcast brings dht based caching and allow to implements MapLoader and MapStore
to plug a persistent key/value storage.

One can imagine storing in a:
    keyvalue store
    clustered filesystem
    replicated rdbms

All this shall need a heartbeat from underlying storage for nodes shutdown.

Implementation is set as follow:

    <?xml version="1.0" encoding="UTF-8"?>
    <hazelcast>
        <map name="qi4j.data">
            <map-store enabled="true">
                <!--
                   Name of the class implementing MapLoader and/or MapStore.
                   The class should implement at least of these interfaces and
                   contain no-argument constructor.
                -->
                <class-name>com.hazelcast.examples.DummyStore</class-name>
                <!--
                   Number of seconds to delay to call the MapStore.store(key, value).
                   If the value is zero then it is write-through so MapStore.store(key, value)
                   will be called as soon as the entry is updated.
                   Otherwise it is write-behind so updates will be stored after write-delay-seconds
                   value by calling Hazelcast.storeAll(map). Default value is 0.
                -->
                <write-delay-seconds>0</write-delay-seconds>
            </map-store>
        </map>
    </hazelcast>
