description = "Qi4j Http Library provides embedded Jetty for Qi4j application use."

jar { manifest { name = "Qi4j Library - Http" }}

test {
  systemProperties 'networkaddress.cache.ttl': '0'
  systemProperties 'sun.net.spi.nameservice.provider.1': 'dns,LocalManagedDns'
}

dependencies {
  compile( project( ":org.qi4j.core:org.qi4j.core.api" ) )
  compile( project( ":org.qi4j.libraries:org.qi4j.library.constraints" ) )
  compile( project( ":org.qi4j.libraries:org.qi4j.library.jmx" ) )
  compile( libraries.slf4j_api )
  compile( libraries.servlet_api )
  compile( libraries.bouncy_castle )
  compile module( libraries.jetty_server ) {transitive = false}
  compile module( libraries.jetty_servlet ) {transitive = false}
  compile module( libraries.jetty_util ) {transitive = false}
  compile module( libraries.jetty_webapp ) {transitive = false}
  compile module( libraries.jetty_jmx ) {transitive = false}
  compile module( libraries.jetty_http ) {transitive = false}
  compile module( libraries.jetty_continuation ) {transitive = false}
  compile module( libraries.jetty_security ) {transitive = false}

  runtime( libraries.jetty_io ) { transitive = false }

  testCompile( project( ":org.qi4j.core:org.qi4j.core.testsupport" ) )
  testCompile( libraries.junit )
  testCompile( libraries.http_client )
  testCompile( libraries.dnsjava )

  testRuntime( libraries.asm )
  testRuntime( libraries.asm_commons )
  testRuntime( libraries.slf4j_simple )
  testRuntime( project( ":org.qi4j.core:org.qi4j.core.runtime" ) )
}
