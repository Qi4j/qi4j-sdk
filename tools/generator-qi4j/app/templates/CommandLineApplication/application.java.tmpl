<%#
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *
-%>
package <%= qi4j.packageName %>.app;

import structure.api.org.qi4j.Application;
import layered.bootstrap.org.qi4j.LayeredApplicationAssembler;

import <%= qi4j.packageName %>.bootstrap.<%= qi4j.name %>Application;

public class <%= qi4j.name %>CommandLineApplication
{
    protected Application application;

    private static final String NAME = "<%= qi4j.name %>";
    private static final String VERSION = "0.1";

    public <%= qi4j.name %>CommandLineApplication(String mode)
        throws AssemblyException
    {
        createApplication(mode);
    }

    @Override
    protected LayeredApplicationAssembler createApplicationAssembler( String mode )
        throws AssemblyException
    {
        return new <%= qi4j.name %>Application( NAME, VERSION, Application.Mode.valueOf( mode ));
    }

    private void createApplication( String mode )
    {
        try
        {
            LayeredApplicationAssembler assembler = createApplicationAssembler( mode );
            assembler.initialize();
            qi4jApplication = assembler.application();
            setName( qi4jApplication.name() );
        }
        catch( Throwable e )
        {
            getLogger().log( Level.SEVERE, "Unable to start Qi4j application.", e );
            throw new InternalError( "Unable to start Qi4j application.", e );
        }
    }

    @Override
    public void start()
        throws Exception
    {
        application.activate();
    }

    @Override
    public void stop()
        throws Exception
    {
        application.passivate();
    }

    public static void main( String[] args )
    {
        <%= qi4j.name %>CommandLineApplication app = new <%= qi4j.name %>CommandLineApplication("development");
        Runtime.getRuntime().addShutdownHook( new Thread( () -> app.stop() ) );
        app.start();
    }
}
