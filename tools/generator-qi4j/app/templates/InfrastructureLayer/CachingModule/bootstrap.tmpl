<%#
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *
-%>
package <%= qi4j.packageName %>.bootstrap.infrastructure;

import common.api.org.qi4j.Visibility;
import bootstrap.org.qi4j.AssemblyException;
import bootstrap.org.qi4j.LayerAssembly;
import bootstrap.org.qi4j.ModuleAssembly;
import layered.bootstrap.org.qi4j.ModuleAssembler;
import org.qi4j.cache.<%- qi4j.caching.toLowerCase() %>.assembly.<%- qi4j.caching %>Assembler;

public class <%- qi4j.caching %>CachingModule
    implements ModuleAssembler
{
    public static final String NAME = "<%- qi4j.caching %> Caching Module";
    private final ModuleAssembly configModule;

    public <%- qi4j.caching %>CachingModule( ModuleAssembly configModule )
    {
        this.configModule = configModule;
    }

    @Override
    public ModuleAssembly assemble( LayerAssembly layer, ModuleAssembly module )
        throws AssemblyException
    {
        new <%- qi4j.caching %>Assembler()
            .visibleIn(Visibility.layer)
            .withConfig( configModule, Visibility.application )
            .assemble( module );

        return module;
    }
}
