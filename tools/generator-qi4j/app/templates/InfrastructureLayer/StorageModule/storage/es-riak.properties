#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.


# List of Riak Protocol Buffer hosts.
#
# Each entry can contain either an IP address / hostname
# or an IP address / hostname followed by a column and the host's port.
# Defaults: 127.0.0.1
#
# hosts=


# User name to use for authentication.
#
# username=


# Password to use for authentication.
#
# password=


# Type of the keystore used for server certificate authentication.
# @OneOf( { "PKCS12", "JCEKS", "JKS" } )
#
# truststoreType=


# Path of the keystore used for server certificate authentication.
#
# truststorePath=


# Password of the keystore used for server certificate authentication.
#
# truststorePassword=


# Type of the keystore used for client certificate authentication.
# @OneOf( { "PKCS12", "JCEKS", "JKS" } )
#
# keystoreType=


# Path of the keystore used for client certificate authentication.
#
# keystorePath=


# Password of the keystore used for client certificate authentication.
#
# keystorePassword=


# Password of the key used for client certificate authentication.
#
# keyPassword=


# Riak Bucket where Entities state will be stored.
# Defaults:" qi4j:entities
#
# bucket=qi4j:entities


# Cluster execution attempts.
#
# clusterExecutionAttempts=


# Minimum connections per node.
#
# minConnections=


# Maximum connections per node.
#
# maxConnections=


# Block on maximum connections.
#
# blockOnMaxConnections=


# Connection timeout.
#
# connectionTimeout=


# Idle timeout.
#
# idleTimeout=
