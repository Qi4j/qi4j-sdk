<%#
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *
-%>
package <%= qi4j.packageName %>.model.<%= qi4j.current.name %>;

import configuration.api.org.qi4j.Configuration;
import scope.injection.api.org.qi4j.Structure;
import scope.injection.api.org.qi4j.This;
import mixin.api.org.qi4j.Mixins;
import unitofwork.api.org.qi4j.UnitOfWorkFactory;
import value.api.org.qi4j.ValueBuilderFactory;
<%
for( var imp in qi4j.current.imported ) {
    if( !imp.startsWith( "java.lang" )
        && imp.includes(".") ) {
        %><%- "import " + imp + ";"; %>
<%
    }
} %>

@Mixins( { <%= qi4j.current.clazz.name %>.Mixin.class } )
public interface <%= qi4j.current.clazz.name %>
{

    class Mixin
        implements <%= qi4j.current.clazz.name %>
    {
        @This
        private Configuration<<%- qi4j.configurationClassName( qi4j.current.clazz.name ); %>> configuration;

        @Structure
        private ValueBuilderFactory vbf;

        @Structure
        private UnitOfWorkFactory uowf;
    }
}

